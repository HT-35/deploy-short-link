version: "3.8"

services:
  backend:
    build: ./short_link
    container_name: backend
    ports:
      - "4000:4000"
    depends_on:
      - db
      - redis
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/shortLink
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=huyA0123
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SPRING_DATA_REDIS_PASSWORD=
      - SPRING_DATA_REDIS_TIMEOUT=60000
    networks:
      - mynetwork

  frontend:
    build:
      context: ./FE_Short_Link
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - mynetwork

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: shortLink
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: huyA0123
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - mynetwork

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - mynetwork

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "3001:3000"
    depends_on:
      - frontend
      - backend
    networks:
      - mynetwork

volumes:
  pgdata:

networks:
  mynetwork:
